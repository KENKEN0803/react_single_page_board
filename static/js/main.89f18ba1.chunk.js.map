{"version":3,"sources":["logo.svg","components/Table.js","components/Writer.js","components/Modify.js","components/Header.js","components/Nav.js","components/Footer.js","App.js","index.js"],"names":["TableBuilder","content","className","author","to","pathname","state","subject","created","Table","useState","number","setNumber","gogo","setGogo","loading","setLoading","url","getDB","a","axios","get","DBlist","useEffect","src","logo","alt","data","map","index","onClick","Writer","email","contents","password","Fform","setFform","type","onChange","e","target","value","name","console","log","editor","ClassicEditor","event","getData","Axios","post","headers","then","alert","Modify","props","location","id","defaultValue","Header","Nav","Footer","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f18ba1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.42627872.svg\";","import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport {Link} from \"react-router-dom\";\nimport logo from '../logo.svg';\n\nfunction Table() {\n    const [number, setNumber] = useState(1);\n    const [gogo, setGogo] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const url = `https://kenken0803.herokuapp.com/getDB?id=${number - 1}&start=${number}`;\n\n    // const url = `https://kenken0803.asuscomm.com:3030/getDB?id=${number - 1}&start=${number}`;\n\n    // const url = `http://localhost:3030/getDB?id=${number}&start=${number}`;\n\n    const getDB = async () => {\n        const DBlist = await axios.get(url);\n        setGogo(DBlist);\n        setLoading(false);\n    }\n\n    useEffect(() => {\n            getDB();\n        }\n        , [number]);\n\n    const next = () => {\n        setNumber(number + 10);\n    }\n\n    const prev = () => {\n        if (number < 11) {\n            return false;\n        }\n        setNumber(number - 10);\n    }\n\n    return (\n        <>\n            <table>\n                <thead>\n                <tr>\n                    <td>작성자</td>\n                    <td>제목</td>\n                    <td>작성일</td>\n                </tr>\n                </thead>\n                <tbody>\n                {loading ? <img src={logo} className=\"App-logo\" alt=\"LOADING...\"/>\n                    : gogo.data.map((data, index) => <TableBuilder content={data} key={index}/>)}\n                </tbody>\n                <tfoot>\n                <tr>\n                    <td>\n                        <button onClick={prev}>이전</button>\n                    </td>\n                    <td>\n                        현재 페이지 : {number}\n                    </td>\n                    <td>\n                        <button onClick={next}>다음</button>\n                    </td>\n                </tr>\n                </tfoot>\n            </table>\n        </>\n    );\n}\n\nfunction TableBuilder({content}) {\n    // const chk = () => {\n    //     console.log(content)\n    // }\n\n    return (\n\n        <tr className=\"rowrow\">\n            <td>{content.author}</td>\n            <td><Link to={{\n                pathname: \"/modify\",\n                state: content\n            }}>{content.subject}</Link></td>\n            <td>{content.created}</td>\n        </tr>\n\n    );\n}\n\nexport default Table;","import {CKEditor} from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport Axios from 'axios';\nimport {useState} from \"react\";\n\nfunction Writer() {\n    const [Fform, setFform] = useState({\n        author: '',\n        email: '',\n        subject: '',\n        contents: '',\n        password: '',\n    })\n\n    const url = `https://kenken0803.herokuapp.com/insertDB`;\n\n    // const url = `https://kenken0803.asuscomm.com:3030/insertDB`;\n\n    // const url = `http://localhost:3030/insertDB`;\n\n    const submitForm = () => {\n        Axios.post(url, {\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            'author': Fform.author,\n            'email': Fform.email,\n            'subject': Fform.subject,\n            'contents': Fform.contents,\n            'password': Fform.password,\n        }).then(alert('등록완료'));\n    }\n    const getTitle = e => {\n        const { name, value } = e.target;\n        setFform({\n            ...Fform,\n            'subject': value\n        })\n        console.log(Fform.subject);\n    };\n\n    const getEmail = e => {\n        const { name, value } = e.target;\n        setFform({\n            ...Fform,\n            'email': value\n        })\n        console.log(Fform.email);\n    };\n\n    const getAuthor = e => {\n        const { name, value } = e.target;\n        setFform({\n            ...Fform,\n            'author': value\n        })\n        console.log(Fform.author);\n    };\n\n    const getPassword = e => {\n        const { name, value } = e.target;\n        setFform({\n            ...Fform,\n            'password': value\n        })\n        console.log(Fform.password);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className='form-wrapper'>\n                제목<input className=\"title-input\" type='text' onChange={getTitle}/><br/>\n                Email<input type=\"text\" onChange={getEmail}/>\n                작성자<input type=\"text\" onChange={getAuthor}/>\n                <CKEditor\n                    editor={ClassicEditor}\n                    data=\"\"\n                    onChange={(event, editor) => {\n                        const data = editor.getData();\n                        // console.log({ event, editor, data });\n                        setFform({\n                            ...Fform,\n                            'contents': data\n                        })\n                        console.log(Fform.contents);\n                    }}\n                />\n            </div>\n            패스워드<input type=\"password\" onChange={getPassword}/><br/>\n            <button onClick={submitForm}>전송</button>\n        </div>\n    )\n}\n\nexport default Writer;","import {CKEditor} from \"@ckeditor/ckeditor5-react\";\nimport ClassicEditor from \"@ckeditor/ckeditor5-build-classic\";\nimport {useEffect, useState} from \"react\";\nimport Axios from \"axios\";\n\nfunction Modify(props) {\n    console.log(props);\n    const [Fform, setFform] = useState({\n        author: props.location.state.author,\n        email: props.location.state.email,\n        subject: props.location.state.subject,\n        contents: props.location.state.contents,\n        password: props.location.state.password,\n        id: props.location.state.id\n    })\n\n    const url1 = `https://kenken0803.herokuapp.com/deleteDB`\n    const url2 = `https://kenken0803.herokuapp.com/updateDB`\n\n    // const url1 = `https://kenken0803.asuscomm.com:3030/deleteDB`;\n    // const url2 = `https://kenken0803.asuscomm.com:3030/updateDB`;\n\n    // const url1 = `http://localhost:3030/deleteDB`;\n    // const url2 = `http://localhost:3030/insertDB`;\n\n    const deleteDB = () => {\n        Axios.post(url1, {\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            'id': Fform.id\n        }).then(alert('삭제함'));\n    }\n\n    const submitForm = () => {\n        Axios.post(url2, {\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json;charset=utf-8\"\n            },\n            'author': Fform.author,\n            'email': Fform.email,\n            'subject': Fform.subject,\n            'contents': Fform.contents,\n            'password': Fform.password,\n            'id': Fform.id\n        }).then(alert('등록완료'));\n    }\n    const getTitle = e => {\n        const {name, value} = e.target;\n        setFform({\n            ...Fform,\n            'subject': value\n        })\n        console.log(Fform.subject);\n    };\n\n    const getEmail = e => {\n        const {name, value} = e.target;\n        setFform({\n            ...Fform,\n            'email': value\n        })\n        console.log(Fform.email);\n    };\n\n    const getAuthor = e => {\n        const {name, value} = e.target;\n        setFform({\n            ...Fform,\n            'author': value\n        })\n        console.log(Fform.author);\n    };\n\n    const getPassword = e => {\n        const {name, value} = e.target;\n        setFform({\n            ...Fform,\n            'password': value\n        })\n        console.log(Fform.password);\n    };\n\n    return (\n        <div className=\"App\">\n            <div className='form-wrapper'>\n                <input className=\"title-input\" type='text' defaultValue={props.location.state.subject}\n                       onChange={getTitle}/><br/>\n                Email:<input type=\"text\" defaultValue={props.location.state.email} onChange={getEmail}/>\n                작성자:<input type=\"text\" defaultValue={props.location.state.author} onChange={getAuthor}/>\n                <CKEditor\n                    editor={ClassicEditor}\n                    data={props.location.state.contents}\n                    onChange={(event, editor) => {\n                        const data = editor.getData();\n                        // console.log({ event, editor, data });\n                        setFform({\n                            ...Fform,\n                            'contents': data\n                        })\n                        console.log(Fform.contents);\n                    }}\n                />\n            </div>\n            패스워드<input type=\"password\" onChange={getPassword}/><br/>\n            <button onClick={deleteDB}>삭제하기</button>\n            <button onClick={submitForm}>전송하기</button>\n        </div>\n    )\n}\n\nexport default Modify;","function Header() {\n    return (\n        <h1 className=\"header\">헤더영역</h1>\n    )\n}\n\nexport default Header;","import {Link} from \"react-router-dom\";\nfunction Nav() {\n    return (\n        <div className=\"App\">\n            <h5><Link to=\"/\">리스트보기</Link> &emsp;\n            <Link to=\"/writer\">새 글 쓰기</Link>\n            </h5>\n        </div>\n    )\n}\n\nexport default Nav;","function Footer() {\n    return (\n        <h4 className=\"footer\">풋터 영역</h4>\n    )\n}\n\nexport default Footer;","import './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport Table from './components/Table';\nimport Writer from './components/Writer';\nimport Modify from './components/Modify';\nimport Header from './components/Header';\nimport Nav from './components/Nav';\nimport Footer from './components/Footer';\n\nfunction App() {\n    return (\n        <HashRouter>\n            <Header/>\n            <Nav/>\n            <Route path=\"/\" exact={true} component={Table}/>\n            <Route path=\"/writer\" component={Writer}/>\n            <Route path=\"/modify\" component={Modify}/>\n            <Footer/>\n        </HashRouter>\n    )\n        ;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}